// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                  Int                  @id @default(autoincrement()) @map("id")
  email               String?              @unique @db.VarChar(127)
  apiCount            Int?                 @map("api_count")
  isEmailVerified     Boolean?             @default(false) @map("is_email_verified")
  firstName           String?              @map("first_name") @db.VarChar(127)
  lastName            String?              @map("last_name") @db.VarChar(127)
  phoneNumber         String?              @map("phone_number") @db.VarChar(15)
  address             Json?                @map("practice_address")
  password            String               @db.VarChar(255)
  hash                String?              @db.VarChar(255)
  bankAccounts        BankAccountDetails[]
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime?            @updatedAt @map("updated_at")
  deletedAt           DateTime?            @map("deleted_at")


  @@map("users")
}

model BankAccountDetails {
  id                  Int                  @id @default(autoincrement()) @map("id")
  accountNumber       String?              @map("account_number") @db.VarChar(16) @unique()
  IBAN                String?              @db.VarChar(24) @unique()
  cardNumber          String?              @db.VarChar(16) @unique()
  cvv                 String               @db.VarChar(3) @unique()
  expiryDate          DateTime             @db.Date
  bank                String         
  user                User?                @relation(fields: [userId], references: [id])
  userId              Int                  @map("user_id")   
  payments            Payment[]
  createdAt           DateTime             @default(now()) @map("created_at")
  updatedAt           DateTime?            @updatedAt @map("updated_at")
  deletedAt           DateTime?            @map("deleted_at")

  @@map("bank_account_details")
}

model Payment { 
  id                  Int                                @id @default(autoincrement()) @map("id")
  transactionId       String                             @map("transaction_id") @unique()
  transferedTo        String?                            @map("transfered_to")
  nameOfBank          String ?                           @map("name_of_bank")
  accountNumber       String?                            @map("account_number") @db.VarChar(16)
  IBAN                String?                            @db.VarChar(24)  
  amount              Decimal                            
  paymentStatus       Status                             @map("payment_status")
  transactionStatus   TransactionStatus                  @map("transaction_status") 
  bank                BankAccountDetails?                @relation(fields: [bankId], references: [id])
  bankId              Int                                @map("bank_id")
  createdAt           DateTime                           @default(now()) @map("created_at")
  updatedAt           DateTime?                          @updatedAt @map("updated_at")
  deletedAt           DateTime?                          @map("deleted_at")

  @@map("payment")
}

enum Status {
  paid @map("PAID")
  unpaid @map("UNPAID")  
}

enum TransactionStatus {
  successful @map("SUCCESSFUL")
  unsuccessful @map("UNSUCCESSFUL")
  pending @map("PENDING")
  canceled @map("CANCELED")
  failed  @map("FAILED")
}